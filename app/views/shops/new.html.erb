<div class="spnew">
  <div class="spnewMain">
    <div class="format">
      <div class="format_content">
        <h2 class="format-title">お店登録</h2>
        <%= form_with(model: @shop, local: true) do |f| %>
          <div class="spnewMain_contents">
            <div class="spnewMain_contents__content">
              <div class="spnewMain_contents__content__head">
                地図から選ぶ
                <table>
                  <tr>
                    <td>検索場所：</td><td><input  type="textbox" id="addressInput" (value=" ") placeholder="入力例：神谷町駅" style="width: 200px"></td>
                    <td>キーワード：</td><td><input type="text" id="keywordInput" (value=" ") placeholder="入力例：ラーメン" style="width: 200px"></td>
                  </tr>
                  <tr>
                    <td>検索範囲：</td>
                    <td>
                      <select id="radiusInput">
                      <option value="50" selected>50 m</option>
                      <option value="100">100 m</option>
                      <option value="200">200 m</option>
                      <option value="500">500m</option>
                      <option value="1000">1km</option>
                      <option value="1500">1.5km</option>
                      <select>
                    </td>
                    <td colspan="2" style="padding: 10px">
                      <%# buttonをクリックしたらgetPlacesを実行 %>
                      <input type="button" value="お店情報取得" onclick="getPlaces();">
                    </td>
                  </tr>
                </table>
                ★結果★<br />
                <div id="results"></div>
                <div class="spnewMain__content__file">
                  <div class="spnewMain__content__file__up">
                    <div class="h3.sell__main__content__file__up__head">
                      <div id='mapArea'></div>
                      <script type="text/javascript">
                        let map
                        let placesList
                        let geocoder
                        
                        /*
                        地図の初期表示
                        */
                        function initMap() {
                          geocoder = new google.maps.Geocoder()
                          map = new google.maps.Map(document.getElementById("mapArea"), {
                            center: {lat: 35.681236, lng:139.767125},
                            zoom: 16,
                          });
                          
                          marker = new google.maps.Marker({
                            position:  {lat: 35.681236, lng:139.767125},
                            map: map
                          });
                        }

                        /*
                        お店情報取得
                        */
                        function getPlaces(){
                          
                          //結果表示クリア
                          document.getElementById("results").innerHTML = "";
                          //placesList配列を初期化
                          placesList = new Array();
                          
                          //入力した検索場所を取得
                          let addressInput = document.getElementById("addressInput").value;
                          if (addressInput == "") {
                            return;
                          }
                          
                          //検索場所の位置情報を取得
                          geocoder = new google.maps.Geocoder();
                          geocoder.geocode(
                            {
                              address: addressInput
                            },
                            function(results, status) {
                              if (status == google.maps.GeocoderStatus.OK) {
                                //取得した緯度・経度を使って周辺検索
                                startNearbySearch(results[0].geometry.location);
                              }
                              else {
                                alert(addressInput + "：位置情報が取得できませんでした。");
                              }
                            });
                        }

                        /*
                        位置情報を使って周辺検索
                          latLng : 位置座標インスタンス（google.maps.LatLng）
                        */
                        function startNearbySearch(latLng){
                          
                          //読み込み中表示
                          document.getElementById("results").innerHTML = "ただいま調べ中です";
                          
                          //Mapインスタンス生成
                          let map = new google.maps.Map(
                            document.getElementById("mapArea"),
                            {
                              zoom: 16,
                              center: latLng,
                              mapTypeId: google.maps.MapTypeId.ROADMAP
                            }
                          );
                          
                          //PlacesServiceインスタンス生成
                          let service = new google.maps.places.PlacesService(map);
                          
                          //入力したKeywordを取得
                          let keywordInput = document.getElementById("keywordInput").value;
                          //入力した検索範囲を取得
                          let obj = document.getElementById("radiusInput");
                          let radiusInput = Number(obj.options[obj.selectedIndex].value);
                          
                          //周辺検索
                          service.nearbySearch(
                            {
                              location: latLng,
                              radius: radiusInput,
                              type: ['restaurant','cafe','bar','bakery'],
                              keyword: keywordInput,
                              language: 'ja'
                            },
                            displayResults
                          );
                          
                          //検索範囲の円を描く
                          let circle = new google.maps.Circle(
                            {
                              map: map,
                              center: latLng,
                              radius: radiusInput,
                              fillColor: '#ff0000',
                              fillOpacity: 0.3,
                              strokeColor: '#ff0000',
                              strokeOpacity: 0.5,
                              strokeWeight: 1
                            }
                          );
                        }

                        /*
                        周辺検索の結果表示
                        ※nearbySearchのコールバック関数
                          results : 検索結果
                          status ： 実行結果ステータス
                          pagination : ページネーション
                        */
                        function displayResults(results, status, pagination) {
                          
                          if(status == google.maps.places.PlacesServiceStatus.OK) {
                          
                            //検索結果をplacesList配列に連結
                            placesList = placesList.concat(results);
                            
                            //pagination.hasNextPage==trueの場合、
                            //続きの検索結果あり
                            if (pagination.hasNextPage) {
                              
                              //pagination.nextPageで次の検索結果を表示する
                              //※連続実行すると取得に失敗するので、
                              //  1秒くらい間隔をおく
                              setTimeout(pagination.nextPage(), 1000);
                            
                            //pagination.hasNextPage==falseになったら
                            //全ての情報が取得できているので、
                            //結果を表示する
                            } else {
                              
                              //ソートを正しく行うため、
                              //ratingが設定されていないものを
                              //一旦「-1」に変更する。
                              for (let i = 0; i < placesList.length; i++) {
                                if(placesList[i].rating == undefined){
                                  placesList[i].rating = -1;
                                }
                              }
                              
                              //ratingの降順でソート（連想配列ソート）
                              placesList.sort(function(a,b){
                                if(a.rating > b.rating) return -1;
                                if(a.rating < b.rating) return 1;
                                return 0;
                              });
                              
                              //placesList配列をループして、
                              //結果表示のHTMLタグを組み立てる
                              let resultHTML = "<ol>";
                              
                              for (let i = 0; i < placesList.length; i++) {
                                place = placesList[i];
                                
                                //ratingが-1のものは「---」に表示変更
                                let rating = place.rating;
                                if(rating == -1) rating = "---";
                                
                                //表示内容（評価＋名称）
                                let content = "【" + rating + "】 " + place.name;
                                
                                //クリック時にMapにマーカー表示するようにAタグを作成
                                resultHTML += "<li>";
                                resultHTML += "<a href=\"javascript: void(0);\"";
                                resultHTML += " onclick=\"createMarker(";
                                resultHTML += "'" + place.name + "',";
                                resultHTML += "'" + place.vicinity + "',";
                                resultHTML += place.geometry.location.lat() + ",";
                                resultHTML += place.geometry.location.lng() + ")\">";
                                resultHTML += content;
                                resultHTML += "</a>";
                                resultHTML += "</li>";
                              }
                              
                              resultHTML += "</ol>";
                              
                              //結果表示
                              document.getElementById("results").innerHTML = resultHTML;
                          
                            }
                          
                          } else {
                            //エラー表示
                            let results = document.getElementById("results");
                            if(status == google.maps.places.PlacesServiceStatus.ZERO_RESULTS) {
                              results.innerHTML = "検索結果が0件です。";
                            } else if(status == google.maps.places.PlacesServiceStatus.ERROR) {
                              results.innerHTML = "サーバ接続に失敗しました。";
                            } else if(status == google.maps.places.PlacesServiceStatus.INVALID_REQUEST) {
                              results.innerHTML = "リクエストが無効でした。";
                            } else if(status == google.maps.places.PlacesServiceStatus.OVER_QUERY_LIMIT) {
                              results.innerHTML = "リクエストの利用制限回数を超えました。";
                            } else if(status == google.maps.places.PlacesServiceStatus.REQUEST_DENIED) {
                              results.innerHTML = "サービスが使えない状態でした。";
                            } else if(status == google.maps.places.PlacesServiceStatus.UNKNOWN_ERROR) {
                              results.innerHTML = "原因不明のエラーが発生しました。";
                            }

                          }
                        }

                        /*
                        マーカー表示
                          name : 名称
                          vicinity : 近辺住所
                          lat : 緯度
                          lng : 経度
                        */
                        function createMarker(name, vicinity, lat, lng, geometry){
                          //マーカー表示する位置のMap表示
                          let map = new google.maps.Map(document.getElementById("mapArea"), {
                            zoom: 18,
                            center: new google.maps.LatLng(lat, lng),
                            // mapTypeId: google.maps.MapTypeId.ROADMAP
                          });
                         
                          //マーカー表示
                          let marker = new google.maps.Marker({
                            map: map,
                            position: new google.maps.LatLng(lat, lng)
                          });

                          //情報窓の設定
                          let info = "<div style=\"min-width: 100px\">";
                          info += name + "<br />";
                          info += vicinity + "<br />";
                          info += "<a href=\"https://maps.google.co.jp/maps?q=" + encodeURIComponent(name + " " + vicinity) + "&z=15&iwloc=A\"";
                          info += " target=\"_blank\">⇒詳細表示</a><br />";
                          info += "<a href=\"https://www.google.com/maps/dir/?api=1&destination=" + lat + "," + lng + "\"";
                          info += " target=\"_blank\">⇒ここへ行く</a>";
                          info += " 住所をコピーしてください";
                          info += "</div>";
                          
                          //情報窓の表示
                          let infoWindow = new google.maps.InfoWindow({
                            content: info
                          });
                          infoWindow.open(map, marker);
                          
                          //マーカーのクリック時にも情報窓を表示する
                          marker.addListener("click", function(){
                            infoWindow.open(map, marker);
                          });

                          let post = document.getElementById("address")
                          post.setAttribute("value", vicinity)

                          let spot = document.getElementById("shopName")
                          spot.setAttribute("value", name)
                        }   
                      </script>
                      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
                      <script src="https://maps.googleapis.com/maps/api/js?language=ja&region=JP&key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap&libraries=places&v=weekly" async defer"></script>
                    </div>
                    <div class="spnewMain__content__form">
                      <%= f.fields_for :map do |s| %>
                        <%= s.label :住所, class:"map_spot" %>
                        <%= s.text_field :address, placeholder:"店舗住所入力", id:"address", class:"map_spot" %>
                      <% end %>  
                    </div>
                    <div class="spnewMain__content__form">
                      <%= f.label :店名 %>
                      <span class="form-require">必須</span>
                      <%= f.text_field :name, placeholder:"店名入力", id:"shopName",class:"shop_name"%>
                    </div>
                    <%# <div class="spnewMain__content__form">
                      <%= form.label :住所 %>
                      <%# <span class="form-require">必須</span>
                      <%= form.text_field :address, class:"shop_address" %>
                    <%# </div> %> 
                    <div class="spnewMain__content__form">
                      <%= f.label :所要時間 %>
                      <span class="form-require">必須</span>
                      <%= f.collection_select :arrivaltime, Arrivaltime.all, :id, :value, prompt:'片道時間を選択',class:"form-box" %>
                    </div>
                    <div class="spnewMain__content__form">
                      <%= f.label :ジャンル %>
                      <span class="form-require">必須</span> 
                      <%= f.select :ganre,[['和食',1],['アジア料理',2],['ヨーロッパ料理',3],['肉料理',4],['カフェ・スイーツ',5],['ファミレス・ファーストフード',6],['ビュッフェ・バイキング',7],['その他',8]],{prompt:'何料理？'},{class:"form-box"} %>
                      <%# prompt以外の要素を調べる %>
                    </div>
                    <div class="spnewMain__content__form">
                      <%= f.label :値段 %>
                      <span class="form-require">必須</span>
                      <%= f.text_field :price, placeholder:"平均価格", class:"form-box" %>円
                    </div>
                    <div class="form-contents__tag" >
                      <%= f.label :タグリスト %>
                      <span class="form-require">必須</span> 
                      <%= f.text_field :tag_list, value: @shop.tag_list.join(","), class: "form-control", placeholder: '例）ワンコイン,並ばない' %>
                    </div>
                  </div>
                </div>
                <div class="actions">
                  <%= f.submit %>
                </div>
              </div>     
            </div>    
          </div>
        <% end %>
      </div>  
    </div>
  </div>
</div>